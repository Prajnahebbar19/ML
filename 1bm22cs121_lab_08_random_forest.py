# -*- coding: utf-8 -*-
"""1BM22CS121-Lab_08_Random_Forest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fHzocJ28-H8Q-srPSH0mxOuNPjDugtdS
"""

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

df = pd.read_csv('/content/iris (2).csv')

X = df.drop('species', axis=1)
y = df['species']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

rf_default = RandomForestClassifier(n_estimators=10, random_state=42)
rf_default.fit(X_train, y_train)
y_pred_default = rf_default.predict(X_test)

default_score = accuracy_score(y_test, y_pred_default)
print(f"Default Random Forest Accuracy (n_estimators=10): {default_score:.4f}")

scores = []
n_range = range(1, 101)

for n in n_range:
    rf = RandomForestClassifier(n_estimators=n, random_state=42)
    rf.fit(X_train, y_train)
    y_pred = rf.predict(X_test)
    score = accuracy_score(y_test, y_pred)
    scores.append(score)

best_score = max(scores)
best_n = n_range[scores.index(best_score)]
print(f"Best Accuracy: {best_score:.4f} with n_estimators = {best_n}")

plt.figure(figsize=(10, 5))
plt.plot(n_range, scores, marker='o')
plt.xlabel("Number of Trees (n_estimators)")
plt.ylabel("Accuracy")
plt.title("Random Forest Accuracy vs Number of Trees")
plt.grid(True)
plt.show()

from sklearn.metrics import confusion_matrix
rf_best = RandomForestClassifier(n_estimators=best_n, random_state=42)
rf_best.fit(X_train, y_train)
y_pred_best = rf_best.predict(X_test)
cm = confusion_matrix(y_test, y_pred_best, labels=rf_best.classes_)
print("Confusion Matrix:")
print(pd.DataFrame(cm, index=rf_best.classes_, columns=rf_best.classes_))

